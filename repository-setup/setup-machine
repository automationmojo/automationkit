#!/bin/bash

# -------------------------------------------------------------------------------------------
#                                 Setup all the Variables and Paths
# -------------------------------------------------------------------------------------------
echo "------------------------------------ VARIABLES ----------------------------------------"

# Establish the base repository reference directory
THIS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
REPOSITORY_DIR="$( dirname $THIS_DIR )"
REPOSITORY_CONFIG="$THIS_DIR/repository-config"

echo "THIS_DIR=$THIS_DIR"
echo "REPOSITORY_DIR=$REPOSITORY_DIR"
echo "REPOSITORY_CONFIG=$REPOSITORY_CONFIG"

echo "---------------------------------------------------------------------------------------"

source $REPOSITORY_CONFIG

# -------------------------------------------------------------------------------------------
#                                 System Package Installation
# -------------------------------------------------------------------------------------------
echo
echo
echo "-------------------------------- SYSTEM PACKAGES --------------------------------------"

function ensure_apt_dependencies() {
    echo "APT INSTALLING: $1"
    read -a dependency_list <<< $1 # Split the dependency string on spaces into a bash array

    for nxt_dep in "${dependency_list[@]}"
    do
        PCHK_OUTPUT="$(dpkg -s $nxt_dep)";
        if [ "$(echo $?)" != 0 ]; then
            echo "System Dependency ($nxt_dep): being installed"
            sudo apt install $nxt_dep
        else
            echo "System Dependency ($nxt_dep): already installed"
        fi
    done
}

function ensure_pip_dependencies() {
    echo "PIP INSTALLING: $1"
    read -a dependency_list <<< $1 # Split the dependency string on spaces into a bash array

    for nxt_dep in "${dependency_list[@]}"
    do
        PCHK_OUTPUT="$(pip3 list | grep $nxt_dep)";
        if [ "$(echo $?)" != 0 ]; then
            echo "Pip Dependency ($nxt_dep): being installed"
            sudo pip3 install $nxt_dep
        else
            echo "Pip Dependency ($nxt_dep): already installed"
        fi
    done
}

function ensure_pipx_dependencies() {
    
    echo "PIPX INSTALLING: $1"
    read -a dependency_list <<< $1 # Split the dependency string on spaces into a bash array

    for nxt_dep in "${dependency_list[@]}"
    do
        PCHK_OUTPUT="$(pipx list | grep \"package $nxt_dep\")";
        if [ "$(echo $?)" != 0 ]; then
            echo "PipX Dependency ($nxt_dep): being installed"
            sudo apt install $nxt_dep
        else
            echo "PipX Dependency ($nxt_dep): already installed"
        fi
    done
}

function ensure_system_dependencies () {
    dependencies=$1
    # Split off the system dependency install base on system type Linux, MacOS, Windows, etc

    # For now we only support Linux
    ensure_apt_dependencies "$dependencies"
}

function ensure_pip_system_dependencies () {
    dependencies=$1
    # Split off the system dependency install base on system type Linux, MacOS, Windows, etc

    # For now we only support Linux
    ensure_pip_dependencies "$dependencies"
}

function ensure_pipx_system_dependencies () {
    dependencies=$1
    # Split off the system dependency install base on system type Linux, MacOS, Windows, etc

    # For now we only support Linux
    ensure_pipx_dependencies "$dependencies"
}

function ensure_mime_types() {

    NEXT_MIME_PACKAGE="repository-setup/mime-info.xml"
    echo "Installing $NEXT_MIME_PACKAGE"
    xdg-mime install "$REPOSITORY_DIR/$NEXT_MIME_PACKAGE"
}

# Run the dependency checks on the system
echo "BASE DEPENDENCIES:"
APT_BASE_DEPENDENCIES="build-essential python3 python3-dev python3-setuptools python3-pip pipx"
ensure_system_dependencies "$APT_BASE_DEPENDENCIES"
echo

echo "PIP SYSTEM DEPENDENCIES"
PIP_SYSTEM_DEPENDENCIES="virtualenv"
ensure_pip_system_dependencies "$PIP_SYSTEM_DEPENDENCIES"
echo
echo "---------------------------------------------------------------------------------------"

echo "PIPX DEPENDENCIES"
PIPX_DEPENDENCIES="poetry"
ensure_pipx_system_dependencies "$PIPX_DEPENDENCIES"
echo
echo "---------------------------------------------------------------------------------------"

echo "REGISTER MIME TYPES"
ensure_mime_types
echo
echo "---------------------------------------------------------------------------------------"